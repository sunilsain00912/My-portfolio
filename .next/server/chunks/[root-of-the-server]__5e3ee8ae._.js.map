{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sonu%20sain/OneDrive/Desktop/My%20Projects/Myportfolio/src/app/api/contact/route.ts"],"sourcesContent":["import {NextRequest, NextResponse} from 'next/server';\r\nimport nodemailer from 'nodemailer';\r\nimport {z} from 'zod';\r\n\r\nconst contactFormSchema = z.object({\r\n  name: z.string().min(2),\r\n  email: z.string().email(),\r\n  message: z.string().min(10),\r\n});\r\n\r\nexport async function POST(req: NextRequest) {\r\n  try {\r\n    const body = await req.json();\r\n    const {name, email, message} = contactFormSchema.parse(body);\r\n\r\n    const transporter = nodemailer.createTransport({\r\n      host: process.env.EMAIL_SERVER_HOST,\r\n      port: Number(process.env.EMAIL_SERVER_PORT),\r\n      secure: process.env.EMAIL_SERVER_PORT === '465',\r\n      auth: {\r\n        user: process.env.EMAIL_SERVER_USER,\r\n        pass: process.env.EMAIL_SERVER_PASSWORD,\r\n      },\r\n    });\r\n\r\n    const mailOptions = {\r\n      from: `\"${name}\" <${process.env.EMAIL_FROM}>`,\r\n      to: process.env.EMAIL_TO,\r\n      replyTo: email,\r\n      subject: `New message from ${name} via your portfolio`,\r\n      html: `\r\n      <div style=\"background-color: #f0f2f5; font-family: 'Syne', Arial, sans-serif; padding: 20px;\">\r\n        <div style=\"max-width: 600px; margin: 0 auto; background-color: #ffffff; border-radius: 12px; overflow: hidden; box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);\">\r\n          <div style=\"background-color: #111827; color: #ffffff; padding: 24px; text-align: center;\">\r\n            <h1 style=\"margin: 0; font-size: 28px; font-weight: 700; letter-spacing: -1px;\">New Portfolio Inquiry</h1>\r\n          </div>\r\n          <div style=\"padding: 24px 32px;\">\r\n            <p style=\"font-size: 16px; color: #4b5563; margin-bottom: 24px;\">You have a new message from your website contact form. Here are the details:</p>\r\n            \r\n            <div style=\"border: 1px solid #e5e7eb; border-radius: 8px; padding: 20px; background-color: #fafafa;\">\r\n              <div style=\"margin-bottom: 16px;\">\r\n                <p style=\"font-size: 14px; color: #6b7280; margin: 0 0 4px 0; text-transform: uppercase; letter-spacing: 0.5px;\">From:</p>\r\n                <p style=\"font-size: 18px; font-weight: 600; color: #1f2937; margin: 0;\">${name}</p>\r\n              </div>\r\n              <div>\r\n                <p style=\"font-size: 14px; color: #6b7280; margin: 0 0 4px 0; text-transform: uppercase; letter-spacing: 0.5px;\">Email:</p>\r\n                <a href=\"mailto:${email}\" style=\"font-size: 18px; font-weight: 600; color: #3b82f6; text-decoration: none;\">${email}</a>\r\n              </div>\r\n            </div>\r\n\r\n            <div style=\"margin-top: 28px;\">\r\n              <h3 style=\"font-size: 20px; font-weight: 600; color: #1f2937; border-bottom: 2px solid #f3f4f6; padding-bottom: 12px; margin-bottom: 16px;\">Message</h3>\r\n              <p style=\"font-size: 16px; color: #4b5563; line-height: 1.7; white-space: pre-wrap;\">${message.replace(/\\n/g, '<br>')}</p>\r\n            </div>\r\n          </div>\r\n          <div style=\"background-color: #f9fafb; padding: 20px 32px; text-align: center; border-top: 1px solid #f3f4f6;\">\r\n            <p style=\"font-size: 12px; color: #9ca3af; margin: 0;\">This email was sent automatically from your portfolio website.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      `,\r\n    };\r\n\r\n    await transporter.sendMail(mailOptions);\r\n\r\n    return NextResponse.json({message: 'Email sent successfully'});\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      return NextResponse.json({error: error.issues}, {status: 400});\r\n    }\r\n    console.error('[CONTACT_FORM_ERROR]', error);\r\n    return NextResponse.json(\r\n      {error: 'Internal Server Error'},\r\n      {status: 500}\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,MAAM,oBAAoB,sIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,MAAM,sIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IACrB,OAAO,sIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK;IACvB,SAAS,sIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;AAC1B;AAEO,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,EAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAC,GAAG,kBAAkB,KAAK,CAAC;QAEvD,MAAM,cAAc,iJAAA,CAAA,UAAU,CAAC,eAAe,CAAC;YAC7C,MAAM,QAAQ,GAAG,CAAC,iBAAiB;YACnC,MAAM,OAAO,QAAQ,GAAG,CAAC,iBAAiB;YAC1C,QAAQ,QAAQ,GAAG,CAAC,iBAAiB,KAAK;YAC1C,MAAM;gBACJ,MAAM,QAAQ,GAAG,CAAC,iBAAiB;gBACnC,MAAM,QAAQ,GAAG,CAAC,qBAAqB;YACzC;QACF;QAEA,MAAM,cAAc;YAClB,MAAM,CAAC,CAAC,EAAE,KAAK,GAAG,EAAE,QAAQ,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;YAC7C,IAAI,QAAQ,GAAG,CAAC,QAAQ;YACxB,SAAS;YACT,SAAS,CAAC,iBAAiB,EAAE,KAAK,mBAAmB,CAAC;YACtD,MAAM,CAAC;;;;;;;;;;;;yFAY4E,EAAE,KAAK;;;;gCAIhE,EAAE,MAAM,oFAAoF,EAAE,MAAM;;;;;;mGAMjC,EAAE,QAAQ,OAAO,CAAC,OAAO,QAAQ;;;;;;;;MAQ9H,CAAC;QACH;QAEA,MAAM,YAAY,QAAQ,CAAC;QAE3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAC,SAAS;QAAyB;IAC9D,EAAE,OAAO,OAAO;QACd,IAAI,iBAAiB,sIAAA,CAAA,IAAC,CAAC,QAAQ,EAAE;YAC/B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAC,OAAO,MAAM,MAAM;YAAA,GAAG;gBAAC,QAAQ;YAAG;QAC9D;QACA,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAC,OAAO;QAAuB,GAC/B;YAAC,QAAQ;QAAG;IAEhB;AACF","debugId":null}}]
}